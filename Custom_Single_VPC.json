{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create Single VPC for Testing.",
  "Parameters": {
    "envPrefix": {
      "Description": "Environment name prefix.",
      "Type": "String",
      "Default": "Test"
    },
	"vpcCidr": {
		"Description": "VPC CIDR block.",
		"Type": "String",
		"Default": "10.45.0.0/16",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    },
	"publicSubnetCidr": {
		"Description": "Public Subnet 1 CIDR Block.",
		"Type": "String",
		"Default": "10.45.1.0/28",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x and subnet of VPC."
    },
	"subnet1AZ": {
		"Description": "Subnet 1 Availability Zone.",
		"Type": "AWS::EC2::AvailabilityZone::Name",
		"Default": "us-east-1a"
    },
    "subnet2AZ": {
		"Description": "Subnet 2 Availability Zone.",
		"Type": "AWS::EC2::AvailabilityZone::Name",
		"Default": "us-east-1b"
    }
},
  "Mappings": {
    "AWSNATAMI": {
      "eu-central-1"   : {"AMI": "ami-22ce4934"},
      "sa-east-1"      : {"AMI": "ami-22ce4934"},
      "ap-northeast-1" : {"AMI": "ami-22ce4934"},
      "eu-west-1"      : {"AMI": "ami-22ce4934"},
      "us-east-1"      : {"AMI": "ami-22ce4934"},
      "us-west-1"      : {"AMI": "ami-22ce4934"},
      "us-west-2"      : {"AMI": "ami-22ce4934"},
      "ap-southeast-2" : {"AMI": "ami-22ce4934"},
      "ap-southeast-1" : {"AMI": "ami-22ce4934"}
    }
  },  
   "Resources": {
    "MyVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {"Ref": "vpcCidr"},
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "VPC"]]}
          }
        ]
      }
    }, 	
	"publicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": ["MyVPC", "attachGateway"],
      "Properties": {
        "CidrBlock": {"Ref": "publicSubnetCidr"},
        "AvailabilityZone": {"Ref" : "subnet1AZ"},
        "VpcId": {"Ref": "MyVPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "Public Subnet"]]}
          }
        ]
      }
    },
	"inetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": ["MyVPC"],
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "InternetGateway"]]}
          }
        ]
      }
    },
	"attachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": ["MyVPC", "inetGateway"],
      "Properties": {
        "VpcId": {"Ref": "MyVPC"},
        "InternetGatewayId": {"Ref": "inetGateway"}
      }
    },
	"rtbPublic": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": ["MyVPC", "attachGateway"],
      "Properties": {
        "VpcId": {"Ref": "MyVPC"},
        "Tags": [{"Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "RTB-Public"]]}}]
		}
    },
	"routePublic": {
		"Type": "AWS::EC2::Route",
		"DependsOn": ["rtbPublic"],
		"Properties": {
			"DestinationCidrBlock": "0.0.0.0/0",
			"RouteTableId": {"Ref": "rtbPublic"},
			"GatewayId": {"Ref": "inetGateway"}
      },
			"DependsOn": "attachGateway"
    },
	"subnetRouteTableAssociationPublic1": {
		"Type": "AWS::EC2::SubnetRouteTableAssociation",
		"DependsOn": ["rtbPublic", "publicSubnet1"],
		"Properties": {
			"RouteTableId": {"Ref": "rtbPublic"},
			"SubnetId": {"Ref": "publicSubnet1"}
			}
		}
	},
 "Outputs" : {
    "VpcId" : {
      "Description": "MyVPC",
      "Value": { "Ref" : "MyVPC" }
    },
    "Publicsubnets" : {
      "Description" : "Public Subnet",
      "Value" : { "Fn::Join" : [",", [{ "Ref" : "publicSubnet1" }]] }
    },
    "AZs" : {
      "Description" : "Availability zones",
      "Value" :  { "Fn::Join" : [",", [ { "Fn::GetAtt" : ["publicSubnet1", "AvailabilityZone"] }]]}
	  }
    }
 }